// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asset.proto

package market

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Asset struct {
	Name        string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Owners      []string `protobuf:"bytes,3,rep,name=owners" json:"owners,omitempty"`
	Rules       []*Rule  `protobuf:"bytes,4,rep,name=rules" json:"rules,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Asset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Asset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Asset) GetOwners() []string {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Asset) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type AssetContainer struct {
	Entries []*Asset `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *AssetContainer) Reset()                    { *m = AssetContainer{} }
func (m *AssetContainer) String() string            { return proto.CompactTextString(m) }
func (*AssetContainer) ProtoMessage()               {}
func (*AssetContainer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AssetContainer) GetEntries() []*Asset {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*Asset)(nil), "market.Asset")
	proto.RegisterType((*AssetContainer)(nil), "market.AssetContainer")
}

func init() { proto.RegisterFile("asset.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xbd, 0x0e, 0x82, 0x30,
	0x14, 0x85, 0x83, 0xfc, 0x18, 0x2e, 0xea, 0x70, 0x07, 0xd3, 0x38, 0x35, 0x2c, 0x32, 0x31, 0xe8,
	0xe4, 0x68, 0x7c, 0x83, 0xbe, 0x41, 0xd5, 0x3b, 0x34, 0x42, 0x4b, 0x6e, 0x4b, 0x8c, 0x6f, 0x6f,
	0x28, 0x92, 0xb8, 0xb5, 0xe7, 0x3b, 0x27, 0xdf, 0x85, 0x4a, 0x7b, 0x4f, 0xa1, 0x1d, 0xd8, 0x05,
	0x87, 0x45, 0xaf, 0xf9, 0x45, 0xe1, 0x00, 0x3c, 0x76, 0x34, 0x67, 0xf5, 0x07, 0xf2, 0xeb, 0x54,
	0x41, 0x84, 0xcc, 0xea, 0x9e, 0x44, 0x22, 0x93, 0xa6, 0x54, 0xf1, 0x8d, 0x12, 0xaa, 0x27, 0xf9,
	0x07, 0x9b, 0x21, 0x18, 0x67, 0xc5, 0x2a, 0xa2, 0xff, 0x08, 0xf7, 0x50, 0xb8, 0xb7, 0x25, 0xf6,
	0x22, 0x95, 0x69, 0x53, 0xaa, 0xdf, 0x0f, 0x6b, 0xc8, 0x27, 0x89, 0x17, 0x99, 0x4c, 0x9b, 0xea,
	0xb4, 0x69, 0x67, 0x75, 0xab, 0xc6, 0x8e, 0xd4, 0x8c, 0xea, 0x0b, 0xec, 0xa2, 0xfa, 0xe6, 0x6c,
	0xd0, 0xc6, 0x12, 0xe3, 0x11, 0xd6, 0x64, 0x03, 0x1b, 0xf2, 0x22, 0x89, 0xbb, 0xed, 0xb2, 0x8b,
	0x45, 0xb5, 0xd0, 0x7b, 0x11, 0x8f, 0x3f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x12, 0xfb, 0xa9,
	0x15, 0xdf, 0x00, 0x00, 0x00,
}
