// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

package market

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionPayload_PayloadType int32

const (
	TransactionPayload_TYPE_UNSET     TransactionPayload_PayloadType = 0
	TransactionPayload_CREATE_ACCOUNT TransactionPayload_PayloadType = 2
	TransactionPayload_CREATE_ASSET   TransactionPayload_PayloadType = 3
	TransactionPayload_CREATE_HOLDING TransactionPayload_PayloadType = 4
	TransactionPayload_CREATE_OFFER   TransactionPayload_PayloadType = 5
	TransactionPayload_ACCEPT_OFFER   TransactionPayload_PayloadType = 10
	TransactionPayload_CLOSE_OFFER    TransactionPayload_PayloadType = 11
)

var TransactionPayload_PayloadType_name = map[int32]string{
	0:  "TYPE_UNSET",
	2:  "CREATE_ACCOUNT",
	3:  "CREATE_ASSET",
	4:  "CREATE_HOLDING",
	5:  "CREATE_OFFER",
	10: "ACCEPT_OFFER",
	11: "CLOSE_OFFER",
}
var TransactionPayload_PayloadType_value = map[string]int32{
	"TYPE_UNSET":     0,
	"CREATE_ACCOUNT": 2,
	"CREATE_ASSET":   3,
	"CREATE_HOLDING": 4,
	"CREATE_OFFER":   5,
	"ACCEPT_OFFER":   10,
	"CLOSE_OFFER":    11,
}

func (x TransactionPayload_PayloadType) String() string {
	return proto.EnumName(TransactionPayload_PayloadType_name, int32(x))
}
func (TransactionPayload_PayloadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0}
}

type TransactionPayload struct {
	PayloadType   TransactionPayload_PayloadType `protobuf:"varint,1,opt,name=payload_type,json=payloadType,enum=market.TransactionPayload_PayloadType" json:"payload_type,omitempty"`
	CreateAccount *CreateAccount                 `protobuf:"bytes,2,opt,name=create_account,json=createAccount" json:"create_account,omitempty"`
	CreateAsset   *CreateAsset                   `protobuf:"bytes,3,opt,name=create_asset,json=createAsset" json:"create_asset,omitempty"`
	CreateHolding *CreateHolding                 `protobuf:"bytes,4,opt,name=create_holding,json=createHolding" json:"create_holding,omitempty"`
	CreateOffer   *CreateOffer                   `protobuf:"bytes,5,opt,name=create_offer,json=createOffer" json:"create_offer,omitempty"`
	AcceptOffer   *AcceptOffer                   `protobuf:"bytes,10,opt,name=accept_offer,json=acceptOffer" json:"accept_offer,omitempty"`
	CloseOffer    *CloseOffer                    `protobuf:"bytes,11,opt,name=close_offer,json=closeOffer" json:"close_offer,omitempty"`
}

func (m *TransactionPayload) Reset()                    { *m = TransactionPayload{} }
func (m *TransactionPayload) String() string            { return proto.CompactTextString(m) }
func (*TransactionPayload) ProtoMessage()               {}
func (*TransactionPayload) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *TransactionPayload) GetPayloadType() TransactionPayload_PayloadType {
	if m != nil {
		return m.PayloadType
	}
	return TransactionPayload_TYPE_UNSET
}

func (m *TransactionPayload) GetCreateAccount() *CreateAccount {
	if m != nil {
		return m.CreateAccount
	}
	return nil
}

func (m *TransactionPayload) GetCreateAsset() *CreateAsset {
	if m != nil {
		return m.CreateAsset
	}
	return nil
}

func (m *TransactionPayload) GetCreateHolding() *CreateHolding {
	if m != nil {
		return m.CreateHolding
	}
	return nil
}

func (m *TransactionPayload) GetCreateOffer() *CreateOffer {
	if m != nil {
		return m.CreateOffer
	}
	return nil
}

func (m *TransactionPayload) GetAcceptOffer() *AcceptOffer {
	if m != nil {
		return m.AcceptOffer
	}
	return nil
}

func (m *TransactionPayload) GetCloseOffer() *CloseOffer {
	if m != nil {
		return m.CloseOffer
	}
	return nil
}

type CreateAccount struct {
	Label       string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *CreateAccount) Reset()                    { *m = CreateAccount{} }
func (m *CreateAccount) String() string            { return proto.CompactTextString(m) }
func (*CreateAccount) ProtoMessage()               {}
func (*CreateAccount) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *CreateAccount) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CreateAccount) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateAsset struct {
	Name        string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Rules       []*Rule `protobuf:"bytes,3,rep,name=rules" json:"rules,omitempty"`
}

func (m *CreateAsset) Reset()                    { *m = CreateAsset{} }
func (m *CreateAsset) String() string            { return proto.CompactTextString(m) }
func (*CreateAsset) ProtoMessage()               {}
func (*CreateAsset) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *CreateAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAsset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateAsset) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type CreateHolding struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Label       string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Asset       string `protobuf:"bytes,4,opt,name=asset" json:"asset,omitempty"`
	Quantity    int64  `protobuf:"zigzag64,5,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *CreateHolding) Reset()                    { *m = CreateHolding{} }
func (m *CreateHolding) String() string            { return proto.CompactTextString(m) }
func (*CreateHolding) ProtoMessage()               {}
func (*CreateHolding) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *CreateHolding) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateHolding) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CreateHolding) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateHolding) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *CreateHolding) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type CreateOffer struct {
	Id             string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Label          string  `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Description    string  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Source         string  `protobuf:"bytes,4,opt,name=source" json:"source,omitempty"`
	SourceQuantity int64   `protobuf:"zigzag64,5,opt,name=source_quantity,json=sourceQuantity" json:"source_quantity,omitempty"`
	Target         string  `protobuf:"bytes,6,opt,name=target" json:"target,omitempty"`
	TargetQuantity int64   `protobuf:"zigzag64,7,opt,name=target_quantity,json=targetQuantity" json:"target_quantity,omitempty"`
	Rules          []*Rule `protobuf:"bytes,8,rep,name=rules" json:"rules,omitempty"`
}

func (m *CreateOffer) Reset()                    { *m = CreateOffer{} }
func (m *CreateOffer) String() string            { return proto.CompactTextString(m) }
func (*CreateOffer) ProtoMessage()               {}
func (*CreateOffer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *CreateOffer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateOffer) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CreateOffer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateOffer) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CreateOffer) GetSourceQuantity() int64 {
	if m != nil {
		return m.SourceQuantity
	}
	return 0
}

func (m *CreateOffer) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *CreateOffer) GetTargetQuantity() int64 {
	if m != nil {
		return m.TargetQuantity
	}
	return 0
}

func (m *CreateOffer) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type AcceptOffer struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Target string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Count  uint64 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
}

func (m *AcceptOffer) Reset()                    { *m = AcceptOffer{} }
func (m *AcceptOffer) String() string            { return proto.CompactTextString(m) }
func (*AcceptOffer) ProtoMessage()               {}
func (*AcceptOffer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *AcceptOffer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AcceptOffer) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *AcceptOffer) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *AcceptOffer) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CloseOffer struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CloseOffer) Reset()                    { *m = CloseOffer{} }
func (m *CloseOffer) String() string            { return proto.CompactTextString(m) }
func (*CloseOffer) ProtoMessage()               {}
func (*CloseOffer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func (m *CloseOffer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*TransactionPayload)(nil), "market.TransactionPayload")
	proto.RegisterType((*CreateAccount)(nil), "market.CreateAccount")
	proto.RegisterType((*CreateAsset)(nil), "market.CreateAsset")
	proto.RegisterType((*CreateHolding)(nil), "market.CreateHolding")
	proto.RegisterType((*CreateOffer)(nil), "market.CreateOffer")
	proto.RegisterType((*AcceptOffer)(nil), "market.AcceptOffer")
	proto.RegisterType((*CloseOffer)(nil), "market.CloseOffer")
	proto.RegisterEnum("market.TransactionPayload_PayloadType", TransactionPayload_PayloadType_name, TransactionPayload_PayloadType_value)
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xbb, 0x6e, 0xdb, 0x4a,
	0x10, 0xbd, 0x7c, 0xe9, 0xda, 0xb3, 0x32, 0x2d, 0x6c, 0x94, 0x80, 0x30, 0x52, 0x08, 0x2c, 0x12,
	0x55, 0x2a, 0x64, 0x20, 0x55, 0x1a, 0x81, 0xa1, 0x1f, 0x80, 0x21, 0x29, 0x14, 0x5d, 0xa4, 0x12,
	0xd6, 0xab, 0xb5, 0x42, 0x84, 0x26, 0x19, 0x72, 0x55, 0xe8, 0x13, 0x02, 0xe4, 0xbf, 0xf2, 0x51,
	0x69, 0x02, 0xee, 0x43, 0xa4, 0x24, 0x27, 0x69, 0x52, 0x71, 0xcf, 0xcc, 0x9e, 0x73, 0x66, 0x38,
	0x43, 0xc2, 0x59, 0x41, 0xb6, 0x69, 0x4e, 0x56, 0xa3, 0xa2, 0xcc, 0x79, 0x8e, 0x3b, 0x4f, 0xa4,
	0xfc, 0xc2, 0xf8, 0x05, 0x94, 0x9b, 0x94, 0xc9, 0x98, 0xff, 0xc3, 0x06, 0x1c, 0x97, 0x24, 0xab,
	0x08, 0xe5, 0x49, 0x9e, 0xcd, 0x25, 0x01, 0xdf, 0x42, 0x57, 0x71, 0x97, 0x7c, 0x5b, 0x30, 0xcf,
	0x18, 0x18, 0x43, 0x77, 0xfc, 0x66, 0x24, 0x15, 0x46, 0xc7, 0x8c, 0x91, 0x7a, 0xc6, 0xdb, 0x82,
	0x45, 0xa8, 0x68, 0x00, 0x7e, 0x0f, 0x2e, 0x2d, 0x19, 0xe1, 0x6c, 0x49, 0x28, 0xcd, 0x37, 0x19,
	0xf7, 0xcc, 0x81, 0x31, 0x44, 0xe3, 0x97, 0x5a, 0x2c, 0x10, 0xd9, 0x89, 0x4c, 0x46, 0x67, 0xb4,
	0x0d, 0xf1, 0x3b, 0xe8, 0x6a, 0x76, 0x55, 0x31, 0xee, 0x59, 0x82, 0xfb, 0xe2, 0x80, 0x5b, 0xa7,
	0x22, 0x44, 0x1b, 0xd0, 0x72, 0xfd, 0x9c, 0xa7, 0xab, 0x24, 0x5b, 0x7b, 0xf6, 0x73, 0xae, 0x37,
	0x32, 0xa9, 0x5d, 0x15, 0x6c, 0xb9, 0xe6, 0x8f, 0x8f, 0xac, 0xf4, 0x9c, 0xe7, 0x5c, 0x67, 0x75,
	0x4a, 0xbb, 0x0a, 0x50, 0xf3, 0x08, 0xa5, 0xac, 0xe0, 0x8a, 0x07, 0xfb, 0xbc, 0x89, 0xc8, 0x29,
	0x1e, 0x69, 0x00, 0xbe, 0x04, 0x44, 0xd3, 0xbc, 0xd2, 0x76, 0x48, 0xd0, 0xf0, 0xce, 0xae, 0x4e,
	0x49, 0x16, 0xd0, 0xdd, 0xd9, 0xff, 0x6e, 0x00, 0x6a, 0xbd, 0x75, 0xec, 0x02, 0xc4, 0x9f, 0xe6,
	0xe1, 0xf2, 0x7e, 0xba, 0x08, 0xe3, 0xde, 0x7f, 0x18, 0x83, 0x1b, 0x44, 0xe1, 0x24, 0x0e, 0x97,
	0x93, 0x20, 0x98, 0xdd, 0x4f, 0xe3, 0x9e, 0x89, 0x7b, 0xd0, 0xd5, 0xb1, 0x45, 0x7d, 0xcb, 0x6a,
	0xdd, 0xba, 0x99, 0xdd, 0x7d, 0xb8, 0x9d, 0x5e, 0xf7, 0xec, 0xd6, 0xad, 0xd9, 0xd5, 0x55, 0x18,
	0xf5, 0x9c, 0x3a, 0x32, 0x09, 0x82, 0x70, 0x1e, 0xab, 0x08, 0xe0, 0x73, 0x40, 0xc1, 0xdd, 0x6c,
	0xa1, 0xaf, 0x20, 0xff, 0x1a, 0xce, 0xf6, 0x26, 0x89, 0xfb, 0xe0, 0xa4, 0xe4, 0x81, 0xa5, 0x62,
	0x79, 0x4e, 0x23, 0x09, 0xf0, 0x00, 0xd0, 0x8a, 0x55, 0xb4, 0x4c, 0x8a, 0x7a, 0x7b, 0xc4, 0x2e,
	0x9c, 0x46, 0xed, 0x90, 0xbf, 0x06, 0xd4, 0x1a, 0x2b, 0xc6, 0x60, 0x67, 0xe4, 0x89, 0x29, 0x15,
	0x71, 0xfe, 0xbb, 0x08, 0xf6, 0xc1, 0xa9, 0xb7, 0xbc, 0xf2, 0xac, 0x81, 0x35, 0x44, 0xe3, 0xae,
	0x7e, 0x97, 0xd1, 0x26, 0x65, 0x91, 0x4c, 0xf9, 0xdf, 0x0c, 0x5d, 0xb2, 0x9e, 0xbb, 0x0b, 0x66,
	0xb2, 0x52, 0x4e, 0x66, 0xb2, 0x6a, 0x5a, 0x30, 0xff, 0xd0, 0x82, 0x75, 0xec, 0xde, 0x07, 0x47,
	0xae, 0xab, 0x2d, 0x79, 0x02, 0xe0, 0x0b, 0x38, 0xf9, 0xba, 0x21, 0x19, 0x4f, 0xf8, 0x56, 0x6c,
	0x14, 0x8e, 0x76, 0xd8, 0xff, 0x69, 0xe8, 0xae, 0xe5, 0x46, 0xfc, 0xab, 0x4a, 0x5e, 0x41, 0xa7,
	0xca, 0x37, 0x25, 0x65, 0xaa, 0x14, 0x85, 0xf0, 0x5b, 0x38, 0x97, 0xa7, 0xe5, 0x41, 0x49, 0xae,
	0x0c, 0x7f, 0x54, 0xd1, 0x5a, 0x80, 0x93, 0x72, 0xcd, 0xb8, 0xd7, 0x91, 0x02, 0x12, 0xd5, 0x02,
	0xf2, 0xd4, 0x08, 0xfc, 0x2f, 0x05, 0x64, 0x78, 0x27, 0xb0, 0x9b, 0xc4, 0xc9, 0xef, 0x27, 0x41,
	0x01, 0xb5, 0xbe, 0x8d, 0xa3, 0xe6, 0x9b, 0x26, 0xcc, 0xbd, 0x26, 0x9a, 0xda, 0xac, 0xbd, 0xda,
	0xfa, 0xe0, 0xc8, 0x3f, 0x4d, 0xdd, 0xb3, 0x1d, 0x49, 0xe0, 0xbf, 0x06, 0x68, 0xbe, 0xa4, 0x43,
	0x8f, 0x87, 0x8e, 0xf8, 0x1f, 0x5e, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xfa, 0x3e, 0x19,
	0x34, 0x05, 0x00, 0x00,
}
